TODO
1. User
  X1.1- A user Home page clicked through ClockinJS instead user data
  X1.2- in Home cancel is not working, - ClientList it's working
    solved by onChange instead of onBlur method on the bootstrap component
  X1.3- record data after changing user data
  1.4- forget password
  1.5- change password

2. Client
  2.1- style buttons from clientList as in User Home component
    trying to mimic User, but it's not working
  X2.2- clientList is hidding the whole card when name is empty because it's checking whether there is props.name
    solved by checking clientId
  X2.3- format and style Add new Client as User Home
    fields name are too big to fit in col sm={2}. Keeping two lines (label + text field)
  2.4- format and style clientList as User Home
    some are working, but others dont

  X? How to get "Select Client" in the button after editing some data?
    passing client as props solves that issue

3. Punch in
 3.1- format data and time pickers
 3.2- after insert new clockin, client's button should be "Select client" label
 3.3- allow edit button (as a modal)
  able to change date, timeStart, timeEnd, rate or delete the clockin

4. Invoices
  4.1- format date and time pickers
  4.2- ...


TODO v2:
1. Invoices
  X1.1- Add Code in the db structure
  when hit "Invoice's Generator", the user should add this info, which can be queried by the clockings from the previous month
   Invoice Code should appear when listing Clockins || "not yet"
  X1.2- Clockins with a Invoice related to cannot be delete (the button should not come out)

2. Email
  X2.1- Prepare the db to set user to receive Email
    X2.1.1- Add a field to the user schema: able_send_email: Boolean
  X2.2- Send email for each clockin generated
    also deleted or changed
  2.3- Send email for each invoice generated
    also deleted or changed
  
3. List Invoices
  X3.1- Modal with invoice and clockin info
    first version is done, need formatting
  3.2- Enable to delete invoice and change each of its clockin's invoice.Code
  X3.3- Enable change Invoice's

- date in Invoices list is "010" instead of "10" => considerer creating a pattern "Jan 10, 2020"
  X010 is fixed, but need to use the pattern. this.formatDate in InvoiceModal is okay to be a functional componenet and be used in other components
    solution: created a funcion .show in ./aux/formatDate.js which handle pretty good the date formating
- sort/order invoices by date - in render table
  Xdone: 
    solution: .sort({date: -}
- in Invoice's List Generator, add a last row to sum up "total hours" and "total $"
  Xdone
- enable scroll in Invoice's modals
  Xdone
- format email to be sent when punched in
  Xdone
- Hamburger menu color to Wheat, Invoice Generator text, Clockin email subject, no Edit button in InvoiceList mobile
  Xdone

- forget/change password. Two ways
  1. FORGET: Login has a "Forget Password" link
    1.1 It opens a modal with a email field + 2 buttons
      OK - creates a temp password, send an email, pops up a message "If <email> is a valid email within Clocki.JS, a temp password has been created and sent to it." and returns to Login
      CANCEL - returns to Login
    1.2 DB user schema has ta have:
      enable_send_email: Boolean
      temp_password: Text
      temp_password_expiry_at: Date
    1.3 user control - I need to create a generate_temp_password method:
      a- check whether the user is allowed to receive email
        if no, send a failure message: "this action is not available to this user. If you need to enable senging email function, send an email to tony.kieling@gmail.com"
      b- temp_password generator - a function to scramble 15 characteres
      c- write down on the db the new info (temp_password + temp_password_expiry_at)
      d- send email with 
      e- return the method with a success message
    1.3 user control - login has to:
      if password does not match, check password against temp_password, if it matches, check temp_password_expiry_at
  
  2. CHANGE: User page has a button "Change password"
    2.1 If user does not have send email enabled, there is no two-way authentication
      2.1.1 It opens a modal with a current password, new Password and confirms password fields
      2.2 If new password and confirma password matchs, them send a message to the server
      2.3 If not, pops up a message "New Password does not match New Password"
    2.2 NO two-way authentication: User control has a change_password method which receives current password
      2.2.1 Check current_password
      2.2.2 If it is okay, encrypt it and write it down into the db and send a successful message
      2.2.3 If it is not okay, send a failure message
    2.3 WITH TWO WAY AUTHENTICATION:

    "first phase to forgetPassword is done: modal / form validation / handling messages and communication to the server + backend receiving and handling data + send email are working. Missing generate code to be sent, page to change password and method to proceed"