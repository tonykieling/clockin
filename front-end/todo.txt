TODO
1. User
  X1.1- A user Home page clicked through ClockinJS instead user data
  X1.2- in Home cancel is not working, - ClientList it's working
    solved by onChange instead of onBlur method on the bootstrap component
  X1.3- record data after changing user data
  1.4- forget password
  1.5- change password

2. Client
  2.1- style buttons from clientList as in User Home component
    trying to mimic User, but it's not working
  X2.2- clientList is hidding the whole card when name is empty because it's checking whether there is props.name
    solved by checking clientId
  X2.3- format and style Add new Client as User Home
    fields name are too big to fit in col sm={2}. Keeping two lines (label + text field)
  2.4- format and style clientList as User Home
    some are working, but others dont

  X? How to get "Select Client" in the button after editing some data?
    passing client as props solves that issue

3. Punch in
 3.1- format data and time pickers
 3.2- after insert new clockin, client's button should be "Select client" label
 3.3- allow edit button (as a modal)
  able to change date, timeStart, timeEnd, rate or delete the clockin

4. Invoices
  4.1- format date and time pickers
  4.2- ...


TODO v2:
1. Invoices
  X1.1- Add Code in the db structure
  when hit "Invoice's Generator", the user should add this info, which can be queried by the clockings from the previous month
   Invoice Code should appear when listing Clockins || "not yet"
  X1.2- Clockins with a Invoice related to cannot be delete (the button should not come out)

2. Email
  X2.1- Prepare the db to set user to receive Email
    X2.1.1- Add a field to the user schema: able_send_email: Boolean
  X2.2- Send email for each clockin generated
    also deleted or changed
  2.3- Send email for each invoice generated
    also deleted or changed
  
3. List Invoices
  X3.1- Modal with invoice and clockin info
    first version is done, need formatting
  3.2- Enable to delete invoice and change each of its clockin's invoice.Code
  X3.3- Enable change Invoice's

- date in Invoices list is "010" instead of "10" => considerer creating a pattern "Jan 10, 2020"
  X010 is fixed, but need to use the pattern. this.formatDate in InvoiceModal is okay to be a functional componenet and be used in other components
    solution: created a funcion .show in ./aux/formatDate.js which handle pretty good the date formating
- sort/order invoices by date - in render table
  Xdone: 
    solution: .sort({date: -}
- in Invoice's List Generator, add a last row to sum up "total hours" and "total $"
  Xdone
- enable scroll in Invoice's modals
  Xdone
- format email to be sent when punched in
  Xdone
- Hamburger menu color to Wheat, Invoice Generator text, Clockin email subject, no Edit button in InvoiceList mobile
  Xdone

- forget/change password. Two ways
  1. FORGET: Login has a "Forget Password" link
    1.1 It opens a modal with a email field + 2 buttons
      OK - creates a temp password, send an email, pops up a message "If <email> is a valid email within Clocki.JS, a temp password has been created and sent to it." and returns to Login
      CANCEL - returns to Login
    1.2 DB user schema has ta have:
      enable_send_email: Boolean
      temp_password: Text
      temp_password_expiry_at: Date
    1.3 user control - I need to create a generate_temp_password method:
      a- check whether the user is allowed to receive email
        if no, send a failure message: "this action is not available to this user. If you need to enable senging email function, send an email to tony.kieling@gmail.com"
      b- temp_password generator - a function to scramble 15 characteres
      c- write down on the db the new info (temp_password + temp_password_expiry_at)
      d- send email with 
      e- return the method with a success message
    1.3 user control - login has to:
      if password does not match, check password against temp_password, if it matches, check temp_password_expiry_at
  
  2. CHANGE: User page has a button "Change password"
    2.1 If user does not have send email enabled, there is no two-way authentication
      2.1.1 It opens a modal with a current password, new Password and confirms password fields
      2.2 If new password and confirma password matchs, them send a message to the server
      2.3 If not, pops up a message "New Password does not match New Password"
    2.2 NO two-way authentication: User control has a change_password method which receives current password
      2.2.1 Check current_password
      2.2.2 If it is okay, encrypt it and write it down into the db and send a successful message
      2.2.3 If it is not okay, send a failure message
    2.3 WITH TWO WAY AUTHENTICATION:

    "front-end to reset password is pretty done, back is started but is missing code generator + the method to handle password change + alter user schema to have 'code' and 'expiry_at'"

    "forget password process, including check expiry date, is done and working. Need to change user register to have info about enable_send_email and organize two_factor auth and also one - for those that do not have enable_send_email activated. Deploying to Heroku"

    change user page to inform about the two_factor auth
    + send an email when password got changed

    after sign up, system send a message to me so I can add the new user's meail as authorized recipient
    I need to:
    - create a method to email me
    - send a message for the new user saying they are going to receive an email from mailgun to confirm they are a autorized recipient
      this message I can explain it will allow them to receive an email for each punch in and to have a two-factor authorization - for security purposes, which will allow to their account to be safer adding an extra protection layer to their Clockin.js account.
    - add a field to user schema called mailgun-recipient (boolean)
      after added as AR, I need to check this field
    - the field above allow user's email modify to be safer
      I need to protect this field to be changed, adding a button "change email" which will send an email to the user to have email modified.
    - also, it allows the user to have a button "change password" which just call "forget password"

    email is created and send from clocki.js
    when a user is signup,
      1 - send the above email
      2 - go to MailGun and add the email
      3 - check when user agree and afer that set able_send_email: true in the database
    
    need to write:
      - change password - which points to forget_password
      - change email - which will use a similar process
          open a modal
          user type the new email
          receives an email to confirm

"method to send email when user signup, email sample and buttons to user are done - need to implement change password to call forget (done) and change email. Deplying to Heroku."

"change passowrd for logged user is working, back, front and db is ok. Deploying to Heroku. Next feature is gonna be change email"
!!! decide put aside change email right now. Let's focus on the system workflow. 2FA is working.

"started changing popbox for Bootstrap Modal, instead of React Modal, and also using Hooks. Delete Invoice front-end is pretty done, missing double check back-end. Plus, no change email for now."

Xsmall changes on the button styling
Xuser page and email
Xgetting ride of Mailgun
Logout close menu

Xdb cleanedup
review user
  signup and user page
    Xset message from server's colors
    Xalert message should be a modal
      Xput in as card message instead of modal or alert
    Xcheck postal code
      Xpostalcode lenght limited to 6
      set a algorithm to accep only letter + number + letter   number + letter + number and capital letter + format with "-" in the middle
    Xcheck phone
    ?is it possinle to verify if an email is valid?
  Xlogin
  Xreset password
  todo: mask input data improvement, such as Postal Code and Dates. Phone is working but not its ref
  todo: set strong password for users
* created and it is working a ConfirmModal component to be used in a general way, when needed a message + two buttons
sysheader
  XConfirmModal applied to sysheader + 
  XMenu is controlled by onStateChange. isOpen is load just at the begging, to change need to be made by onStateChange.
    need to act about clicking outside menu and closing it.
review client page
  add client back and front review. tried to insert HTML/bootstrap validation, but it did not work. Vlidation checking this.state variables Xand modal is working.
review clockin
  XAdd PunchIn
  XList PunchIn
    XModal
    XDelete
    Xbetter styling in the table
  send email when clocking got deleted
    also, do not delete, but check a field "removed" and keep it (soft delete), instead of hard delete
review invoice
  review clockin delete when there is invoice (its not able to be delete - dissable button delete on the modal)
  send email when it is generated, delivered and received
redo all try/catch to throw an error instead of dealing with failure (example at PunchInModal.js line 51 or clockin.delete (be))
fix the auth ECA01 message when system is reseted, going directly to the login page instead of showing that
date start and date end in the same line at punchin (so it will fill better the screen)
organize all messages to be displayed on the top of the last button (like user's page)
added break 
  missing invoice consider worked_hours field in the db

Xreviewinvoicelistmodal to show date delivered too
*** test invoice generation with the two types of clockin (with break and whithout it)
check invoice generation with multiples situations (with break or not)
 the invoice's generator (backend) is correct. The thing is in the frontend, renderDataTable, both in Invoice's Generator as List of Punchins, it's incorrect:
  solution, fix the algorith inserting worked_hours (see invoice.js, line 222)
    have only one renderDataTable for both Punchin and Invoice generator
  *** check clockin.js line 102
function renderClockinDataTable was create and is being used by PunchInList.js and InvoiceNew.js
  TODO InvoiceListModal should also use the function above and also enable the modal for the clockins

XInvoiceGenerator has to allow button and send a message if no date OR no cliente
Xsubmit button enabled at Punchin after punched
+-- enable dt generate to invoice
  fe and be are done
X- in change invoice's status, enable message greater than ... and validation (received > deliver > generate)
- check add break (it has been disabling submit button in the second punch in) - see validation
X- enable offset (adjustment) more or less and reason to invoice
X- enable change invoice's code
X- add pictures to quick guidance


X- ordinary client:
  X - add
    review data type and validation
      phone number only number
      email should be a valid one
      being made by the browser resource
      postal code with a mask for Canadian pattern (checkbox which allows postal code outside Canada)
  X - edit
    it's working for both kid and ordinary clients
  X - need to double check email's pattern for forms:
      pattern     = "/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/"    OR
      pattern     = "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$" OR
      pattern     = "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$" CHOOSED IT
  X - clockin and invoice (check the behaviour)
X - generate invoice should take user date/time, instead of the server (as it is happening now)
X - system only accepts invoice code with no repetition for that particular client and user
X system show the last invoice code for that client/user in the invoice generator screen (as a suggestion)
  - query clockins and get the last invoice code
  - taking from right to left, check if there is number, if so, add 1 to it as suggestion, if not, take the last code
  - print in the code on its respective filed in the form
  - format color in the codeMessage (green for suggestion and yellow for last code used)
  - error message is gonna be something like "this was the last invoice code used. Please set a new one."
  - ToolTip on Invoice's code added
X- invoice date on frontend is being the host system time, rather than the local time
X- add code sugestion (client(09+01))
X- allow user to set a client as "inactive"
  - change db to have inactive field (client collection), done
  - need to have a API to do so (used API is modify)
  - need to develop front-end to do so, done
X- Invoice's List, above the list of invoices references nickname (it also should consider general clients by their names)
  - need to check in other screens such as clockins
X- Email for clockin is sending the nickname, but it is not considering general clients
X- nickname in the toogle GetClients instead of name (for kids)
X- when generating invoice, and also in Punch List, the list of clockins should show duration, instead of CAD$ (user requirement). Need to change the labels, as well.
X- SignUp page rebuilded using react hooks and handling tips and PostalCode format for Canada and outside Canada
X- invoice for BC Autism modified to accomodate multiple pages
X- clientList button according what Si asked
X- Punch in form able to not show rate and notes , user needs to set on client page
- invoice for ordinary client

- punchin show clockins for the day as soon the user selects it. If no client yet, it shows all clockins in a table regarding the selected day.
  X- decided to show on PunchIn page all clockins for the day, regardles the client
  X- when there is clockin, the system block time that alread been used for other client
    - it is not possible to have shared time among clients at the same time. Checked with Si and she also think the same.
  X- fix bug when recording clockin
    it was validating hours even though no clocking for the day. Solved.
  X- fix error when querying the clockins (rn it's showing only "OK").
    find a return with the "OK" message. Solved.
  X- set date picker in a diff way btw smalls reen and pc
  - enable user clockin in a break (it's possible to work in a diff place if it is a break)
  - expand pastClockins htmlTable
  - set a frame around "Starting, Ending and Total"
  - Total column content centralized

- link user to company, actually it is applicable only for kids due to Si's necessity of having some kids related to a company. This way she will be able to generate an invoice for the company, instead of each one of the kids
  X- menu change to Clients / Add a New One / Company-General
  X- client's model database has a field client_linked_to_company
  X- client's BE needs to receive and record it
  - client's FE:
    X- client's form needs to have a field "link this client to a company"
      X- when it happes, there is an option in a field "rate as for the Company"
      X- has to record a field in db called rateAsPerCompany
        - change Client model to have the above field
        - BE needs to process it
    X- GetClient button with diff color when it comes to select company (apply for new kids and edit kids - ClientNew.js and ClientsList.js components)
    X- Client schema should also have a field "company", type of Boolean. It will easy when it comes to Punchin and Invoice procedures.
      After setting a Client as Company, the user is also able to revert it by editing the client and marking the field above as false. It also disconnect the clients linked to this client.
      - change Client edit BE procedure to make it happen:
        X- link client (kid) and set client as company (company)
        - unlink client (kid) and unset client as company (company)
        - when a kid is linked to a Client Company, this automatically will disable to Punchin to this client, only for the kids linked to it
    - update ClientsList, as well
    - on Clockin, show in the green button only kids' clients, not company
    - on Invoice Generation, green button shows only Company and not kids's clients

- update invoice when change its status (right now need to close the modal and return to main screen, click on the invoice and it will be refreshed. Need to update when change status without needing to return to main screen)
- add report (invoices = all / per client / per period / per status)
              clockins
- hamburguer icon set on the left side instead of right (now)
- analyse back-end to avoid code repetition and rewrite some parts
- analyse front-end to avoid code repetition (check for duplicate functions, such as handlePostalCode and handlePostalCodeChange)
- allow user to delete their account - in practice it will set as true the field "deleted"
  - change db to have deleted field (user collection)
  - need to have a API to do so
  - need to develop front-end to do so
