{"version":3,"sources":["component/Land.js","component/Error.js","component/SysHeader.js","component/Register.js","component/Login.js","component/Home.js","component/User.js","component/ClientNew.js","component/aux/GetClients.js","component/ClientsList.js","component/PunchInNew.js","component/PunchInsList.js","component/PdfTemplate.js","component/InvoiceNew.js","component/About.js","App.js","component/store/localStorage.js","component/store/reducer.js","component/store/store.js","serviceWorker.js","index.js"],"names":["Land","Error","SysHeader","logout","window","confirm","props","noUser","loggedHeader","Navbar","bg","Brand","to","className","Toggle","aria-controls","Collapse","id","Nav","storeEmail","NavDropdown","title","Item","href","Divider","Button","onClick","notLoggedHeader","variant","this","Component","connect","store","email","dispatch","type","Register","state","name","password","confirmPassword","address","city","postalCode","phone","redirectFlag","message","btnType","undefined","handleChange","e","key","target","textInput2","focus","textInput3","textInput4","textInput5","textInput7","textInput8","setState","value","handleSubmit","a","preventDefault","alert","createUser","axios","post","addUser","data","user","_id","token","postal_code","dispatchLogin","error","clearMessage","setTimeout","textInput1","afterChange","event","Card","Form","onSubmit","Group","controlId","Label","Control","autoFocus","placeholder","onChange","onKeyPress","ref","input","mask","onBlur","textInput6","Login","errorMsg","fetch","method","headers","body","JSON","stringify","then","response","json","resJSON","clearMsg","catch","console","Text","Container","Home","url","userId","changeUser","patch","storeToken","modUser","storeId","disableEdit","log","updateState","editForm","btnCancel","storeName","storeCity","storeAddress","storePhone","storePostalCode","tmp_name","tmp_email","tmp_city","tmp_address","tmp_phone","tmp_postalCode","Header","as","Row","column","sm","Col","disabled","ClientNew","nickname","birthday","mother","mPhone","mEmail","father","fPhone","fEmail","consultant","cPhone","cEmail","defaultRate","createClient","addClient","autoComplete","textInput9","textInput10","textInput11","textInput12","textInput13","GetClients","populateDropbox","Dropdown","client","Menu","clients","map","changes","incommingClient","getClientInfo","get","getClients","count","ClientsList","handleChangeDate","incomingDate","clientId","default_rate","newClientData","newData","Date","toLocaleString","timeZone","cleanForm","disableEditForm","populateForm","tmp_nickname","tmp_birthday","tmp_mother","tmp_mPhone","tmp_mEmail","tmp_father","tmp_fPhone","tmp_fEmail","tmp_consultant","tmp_cPhone","tmp_cEmail","tmp_default_rate","style","width","Body","Title","selected","onSelect","dateFormat","PunchInNew","date","startingTime","endingTime","rate","notes","cleanMessage","getTime","timeStart","timeEnd","addClockin","messageValidationMethod","showTotalTime","time1","parse","time2","rows","PunchInsList","dateStart","dateEnd","getClockins","allClockins","clockinList","clockInListTable","renderDataTable","tableVisibility","cleanButton","clockins","clockin","index","dt","ts","time_start","te","time_end","clockinsToSend","num","getFullYear","getMonth","getDate","getHours","getMinutes","totalTime","total","Number","invoice","invoice_id","length","Table","striped","bordered","hover","size","responsive","PdfTemplate","generatePdf","contentBody","clockinsTable","InvoiceNew","storeClientId","showPreview","invoicePdfPreview","rel","App","exact","path","render","User","component","NoPage","getUser","localStorage","getItem","err","saveState","setItem","clearUserLS","removeItem","initialState","reducer","action","newState","persistedData","createStore","subscribe","getState","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.603cfdfc.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Land() {\n  return (\n    <div>\n      <h1>\n        This is Land page\n      </h1>\n      <p>Fill this part with some text</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Error() {\n  return (\n    <div>\n      <h2> &lt;404> NoNo page at all..</h2>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, NavDropdown, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass SysHeader extends Component {\n\n  // function to set no user thus closing the user's session\n  logout = () => {\n    if (window.confirm(\"Are you sure you wanna leave?\"))\n      this.props.noUser()\n  }\n\n\n  // when a user is logged\n  loggedHeader = () => {\n    return (\n      <Navbar bg=\"primary\" >\n        {/* <Navbar.Brand href=\"/\">ClockinJS</Navbar.Brand> */}\n        <Navbar.Brand>\n          <Link to = \"/\" className=\"navbar-brand\"> ClockinJS </Link>\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/user\" className=\"nav-link\">{this.props.storeEmail} is logged</Link>\n            <NavDropdown title=\"Clients\" id=\"basic-nav-dropdown1\">\n              <NavDropdown.Item href=\"clientNew\">Add New One</NavDropdown.Item>\n              {/* <Link to = \"/clientNew\" className=\"dropdown-item\"> Add New Client</Link> */}\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/clientList\"> List </NavDropdown.Item>\n            </NavDropdown>\n\n            <NavDropdown title=\"Clockins\" id=\"basic-nav-dropdown2\">\n              <NavDropdown.Item href=\"punchInNew\"> Punch in </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"punchInsList\">List them all</NavDropdown.Item>\n            </NavDropdown>\n\n            <NavDropdown title=\"Invoices\" id=\"basic-nav-dropdown3\">\n              <NavDropdown.Item href=\"invoiceNew\">Generate a brand new one</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"pdfTemplate\">List them all</NavDropdown.Item>\n            </NavDropdown>            \n\n            <Link to=\"/about\" className=\"nav-link\">About</Link>\n\n          </Nav>\n\n          <Button onClick={this.logout} className=\"logoutBtn\">Logout</Button>\n\n        </Navbar.Collapse>\n\n      </Navbar>\n    );\n  }\n\n\n  notLoggedHeader = () => {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">ClockinJS</Navbar.Brand>\n        <Nav>\n          <Link to=\"/login\" className=\"nav-link\">Login</Link>\n          <Link to=\"/register\" className=\"nav-link\">Register</Link>\n          <Link to=\"/about\" className=\"nav-link\">About</Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n\n  render() {\n    return(this.props.storeEmail ?\n            this.loggedHeader() :\n            this.notLoggedHeader()\n          );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    storeEmail      : store.email\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    noUser: () => dispatch({type:\"LOGOUT\"})\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SysHeader);","import React, { Component } from 'react';\nimport { Button, Form, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport axios from \"axios\";\nimport MaskedInput from 'react-text-mask';\n\nclass Register extends Component {\n\n  state = {\n      name            : \"\",\n      email           : \"\",\n      password        : \"\",\n      confirmPassword : \"\",\n\n      address         : \"\",\n      city            : \"\",\n      postalCode      : \"\",\n      phone           : \"\",\n\n      redirectFlag    : false,\n      message         : \"\",\n      btnType         : undefined\n    }\n\n\n  handleChange = e => {\n    if (e.key === \"Enter\")\n      switch(e.target.name) {\n        case \"name\":\n          if (this.state.name !== \"\")\n            this.textInput2.focus();\n          break;\n        case \"email\":\n          if (this.state.email !== \"\")\n            this.textInput3.focus();\n          break;\n        case \"city\":\n          if (this.state.city !== \"\")\n            this.textInput4.focus();\n          break;\n        case \"address\":\n          if (this.state.address !== \"\")\n            this.textInput5.focus();\n          break;\n        case \"postalCode\":\n          // if (this.state.postalCode !== \"\")\n            // this.textInput6.focus();\n          break;\n        case \"phone\":\n          if (this.state.phone !== \"\")\n            this.textInput7.focus();\n          break;          \n        case \"password\":\n          if (this.state.password !== \"\")\n            this.textInput8.focus();\n          break;\n        case \"confirmPassword\":\n          if (this.state.confirmPassword !== \"\")\n            this.setState({ btnType: \"submit\" });\n          break;\n        default:                     \n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n  }\n\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    if (this.state.email !== \"\" && this.state.name !== \"\") { // && this.state.password !== \"\" && this.state.confirmPassword !== \"\") {\n      if ((this.state.password !== this.state.confirmPassword) || (this.state.password === \"\")) {\n        alert(\"Password and \\nConfirm Password fields\\n\\nMUST be the same\\n and NOT empty.\");\n        this.setState({\n          password        : \"\",\n          confirmPassword : \"\"\n        })\n        this.textInput4.focus();\n      } else {\n        const url = \"/user/signup\";\n        // const url         = \"http://localhost:3333/user/signup\";    // this is dev setting\n        const createUser  = {\n          name        : this.state.name,\n          email       : this.state.email,\n          password    : this.state.password,\n\n          address     : this.state.address,\n          city        : this.state.city,\n          postalCode  : this.state.postalCode,\n          phone       : this.state.phone\n        }\n\n        try {\n          const addUser = await axios.post(url, createUser);\n          if (addUser.data.message) {\n            const user = {\n              id      : addUser.data.user._id,\n              name    : addUser.data.user.name,\n              email   : addUser.data.user.email,\n              token   : addUser.data.token,\n\n              address     : addUser.data.user.address,\n              city        : addUser.data.user.city,\n              postalCode  : addUser.data.user.postal_code,\n              phone       : addUser.data.user.phone\n            }; \n            this.props.dispatchLogin({ user });\n            this.setState({\n              redirectFlag: true\n            });\n          } else if (addUser.data.error) {\n            this.setState({\n              message : addUser.data.error });\n            this.clearMessage();\n          }\n\n        } catch(err) {\n          this.setState({\n            message : err.message });\n          this.clearMessage();\n        }\n      }\n    }\n  }\n\n\n  //it clears the error message after 3.5s\n  clearMessage = () => {\n    setTimeout(() => {\n      this.setState({\n        message         : \"\",\n        password        : \"\",\n        confirmPassword : \"\"\n      })\n      this.textInput1.focus();\n    }, 3500);\n  }\n\n\n  afterChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n\n  render() {\n    if (this.state.redirectFlag)\n      return(<Redirect to=\"/\" />);\n    else\n      return (\n        <div>\n          <h1>Register ClockinJS User Page</h1>\n          <Card>\n            <Form onSubmit={this.handleSubmit}>\n\n              <Form.Group controlId=\"formName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  autoFocus   = {true}\n                  type        = \"text\"\n                  placeholder = \"Type the user's name\"\n                  name        = \"name\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.name}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput1 = input }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type        = \"email\"\n                  placeholder = \"Type the user's email\"\n                  name        = \"email\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.email}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput2 = input }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type        = \"text\"\n                  placeholder = \"Type the user's city\"\n                  name        = \"city\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.city}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput3 = input }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formAddress\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  type        = \"text\"\n                  placeholder = \"Type the user's address\"\n                  name        = \"address\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.address}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput4 = input }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formPostalCode\">\n                <Form.Label>Postal Code</Form.Label>\n                <Form.Control\n                  type        = \"text\"\n                  placeholder = \"Type the user's Postal Code\"\n                  name        = \"postalCode\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.postalCode}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput5 = input }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formPhone\">\n                <Form.Label>Phone</Form.Label>\n                {/* <Form.Control\n                  type        = \"text\"\n                  placeholder = \"Type the user's phone\"\n                  name        = \"phone\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.phone}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput6 = input }\n                /> */}\n\n                <MaskedInput\n                  mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                  className   = \"form-control\"\n                  placeholder = \"Enter your phone number\"\n                  name        = \"phone\"\n                  // guide={false}\n                  // id          = \"fPhone\"\n                  onBlur      = {e => this.afterChange(e)}\n                  value       = {this.state.phone}\n                  onKeyPress  = {() => this.handleChange}\n                  ref         = {input => this.textInput6 = input }\n                  // alwaysShowMask = {true}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type        = \"password\"\n                  placeholder = \"Password\"\n                  name        = \"password\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.password}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput7 = input }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formConfirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type        = \"password\"\n                  placeholder = \"Confirm Password\"\n                  name        = \"confirmPassword\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.confirmPassword}\n                  onKeyPress  = {this.handleChange}\n                  ref         = {input => this.textInput8 = input }\n                  />\n              </Form.Group>\n\n\n              { /* mount the Dropbox Button with all clients for the user */ }\n            <div className=\"gridClientBtContainer\">\n              <span></span>\n              <Button \n                variant = \"primary\" \n                type    = {this.state.btnType}\n                onClick = {this.handleSubmit}>\n                Submit\n              </Button>\n\n              <span className=\"messageSettings\">\n                {this.state.message }\n              </span>\n            </div>\n\n          <br></br>\n          <br></br>\n\n            </Form>\n            </Card>\n        </div>\n      )\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogin: user => dispatch({\n      type:\"LOGIN\",\n      data: user })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Register)\n","import React, { Component } from 'react';\nimport { Button, Form, Card, Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nclass Login extends Component {\n\n    state = {\n      email         : \"\",\n      password      : \"\",\n      errorMsg      : \"\"\n    }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    \n    if (e.key === \"Enter\" && this.state.email !== \"\") {\n      if (e.target.name === \"email\")\n        this.textInput2.focus();\n    }\n  }\n\n\n  handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.email !== \"\" && this.state.password !== \"\") {\n        // const url = \"/login\"; // if the fetch is being made to the same machine, just consider the API place.\n        // const url = \"http://localhost:3333/user/login\";   // dev setting\n        const url = \"/user/login\";   // dev setting\n        // const url = window.location.origin + \"/login\";\n        fetch( url, {  \n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ \n                email     : this.state.email,\n                password  : this.state.password\n              })\n        })\n        .then(response => response.json())\n        .then((resJSON) => {\n          if ('message' in resJSON){\n            const user = resJSON.user;\n            user.id    = user._id;\n            user.token = resJSON.token;\n            this.props.dispatchLogin({ user });\n          }\n          else if ( 'error' in resJSON){\n            this.setState({\n              errorMsg  : resJSON.error,\n              email     : \"\",\n              password  : \"\"\n            });\n\n            // when login fails, it focus in the email field\n            this.textInput1.focus();\n\n            //it clears the error message after 3.5s\n            this.clearMsg();\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.setState({errorMsg: error.message});\n          this.clearMsg();\n        })\n      }\n  }\n\n  clearMsg = () => {\n    setTimeout(() => {\n      this.setState({\n        errorMsg: \"\"\n      })\n    }, 3500);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Login Page</h1>\n        <Card>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>User's Email</Form.Label>\n              <Form.Control\n                autoFocus   = {true}\n                type        = \"email\"\n                placeholder = \"Type the user's email\"\n                name        = \"email\"\n                onChange    = {this.handleChange}\n                onKeyPress  = {this.handleChange}\n                value       = {this.state.email}\n                ref         = {input => this.textInput1 = input }\n                />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type        = \"password\"\n                placeholder = \"Password\"\n                name        = \"password\"\n                value       = {this.state.password}\n                onChange    = {this.handleChange}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput2 = input }\n              />\n              {/* <p id=\"errorMsg\">{ this.state.errorMsg }</p> */}\n            </Form.Group>\n            \n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n            <Container className=\"msgcolor\">\n              {this.state.errorMsg}\n            </Container>\n          </Form>\n          </Card>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogin: user => dispatch({type:\"LOGIN\", data: user })\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react'\n\nexport default function Home() {\n  return (\n    <div>\n      This is Home Page\n    </div>\n  )\n}\n\n","import React, { Component } from 'react';\nimport { Card, Form, Col, Row, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport axios from \"axios\";\n\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      disableEdit : true,\n      userId      : this.props.storeId,\n      name        : this.props.storeName,\n      email       : this.props.storeEmail,\n      city        : (this.props.storeCity === \"undefined\") ? \"-\" : this.props.storeCity,\n      address     : (this.props.storeAddress === \"undefined\") ? \"-\" : this.props.storeAddress,\n      phone       : (this.props.storePhone === \"undefined\") ? \"-\" : this.props.storePhone,\n      postalCode  : (this.props.storePostalCode === \"undefined\") ? \"-\" : this.props.storePostalCode,\n      message     : \"\",\n      tmp_name        : \"\",\n      tmp_email       : \"\",\n      tmp_city        : \"\",\n      tmp_address     : \"\",\n      tmp_phone       : \"\",\n      tmp_postalCode  : \"\"\n    }\n  }\n\n\n  // need to implement it\n  handleSubmit = async () => {\n    if (this.state.name && this.state.email) {\n      // asd\n    } else {\n      if (!this.state.name && this.state.email) {\n        this.setState({\n          message: \"Please, name should be filled.\"\n        });\n\n        this.textInput1.focus();\n      } else if (!this.state.email && this.state.name) {\n        this.setState({\n          message: \"Please, email should be filled.\"\n        });\n\n        this.textInput2.focus();\n      } else  {\n        this.setState({\n          message: \"Please, at least name and email should be filled.\"\n        });\n\n        this.textInput1.focus();\n      }\n\n      this.clearMessage();\n    }\n\n    // handle submit itself\n\n    const url         = `http://localhost:3333/user/${this.state.userId}`;    // this is dev setting\n    const changeUser  = {\n      name        : this.state.name,\n      email       : this.state.email,\n      address     : this.state.address,\n      city        : this.state.city,\n      postalCode  : this.state.postalCode,\n      phone       : this.state.phone\n    }\n\n    try {\n      const modUser = await axios.patch( \n        url,\n        changeUser,\n        {  \n          headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${this.props.storeToken}` }\n      });\n\n      if (modUser.data.message) {\n        const user = {\n          id          : this.props.storeId,\n          name        : modUser.data.data.name,\n          email       : modUser.data.data.email,\n          city        : modUser.data.data.city,\n          address     : modUser.data.data.address,\n          postalCode  : modUser.data.data.postalCode,\n          phone       : modUser.data.data.phone,\n          token       : this.props.storeToken };\n\n        this.setState({\n          message     : modUser.data.message,\n          disableEdit : true\n        });\n\n        this.props.dispatchLogin({ user });\n\n      } else if (modUser.data.error) {\n        this.setState({\n          disableEdit : true,\n          message     : modUser.data.error\n        });\n      }\n\n      this.clearMessage();\n    } catch(error) {\n      console.log(\"catch error: \", error.message);\n    }\n\n\n  }\n\n\n  updateState = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n\n  editForm = () => {\n    this.setState({\n      disableEdit: false,\n    });\n  }\n\n\n  btnCancel = () => {\n    this.setState({\n      disableEdit: true,\n\n      name            : this.props.storeName,\n      email           : this.props.storeEmail,\n      city            : this.props.storeCity,\n      address         : this.props.storeAddress,\n      phone           : this.props.storePhone,\n      postalCode      : this.props.storePostalCode\n    });\n  }\n\n\n  clearMessage = () => {\n    setTimeout(() => {\n      this.setState({\n        message: \"\"\n      });\n    }, 3000);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"htitle\">User's Home Page</h1>\n        <h3>Welcome {this.props.storeEmail} </h3> \n        <br></br>\n\n        <Card>\n          <Card.Header className=\"cardTitle\">User Information</Card.Header>\n\n          <Form className=\"formPosition\">\n            <Form.Group as={Row} controlId=\"formId\">\n              <Form.Label column sm={2} className=\"card-label\">Id</Form.Label>\n              <Col >\n                <Form.Label column sm={8} >{this.state.userId}</Form.Label>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formName\">\n              <Form.Label column sm={2} className=\"card-label\">Name</Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  disabled      = {this.state.disableEdit}\n                  type          = \"text\"\n                  name          = \"name\"\n                  onChange      = {this.updateState}\n                  placeholder   = {this.state.name}\n                  value         = {this.state.name}\n                  onKeyPress    = {this.handleChange}\n                  ref           = {input => this.textInput1 = input }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formEmail\">\n              <Form.Label column sm={2} className=\"card-label\">Email</Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  disabled      = {this.state.disableEdit}\n                  type          = \"text\"\n                  name          = \"email\"\n                  onChange      = {this.updateState}\n                  placeholder   = {this.state.email}\n                  value         = {this.state.email}\n                  onKeyPress    = {this.handleChange}\n                  ref           = {input => this.textInput2 = input }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formAddress\">\n              <Form.Label column sm={2} className=\"card-label\">Address</Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  disabled      = {this.state.disableEdit}\n                  placeholder   = {this.state.address}\n                  type          = \"text\"\n                  name          = \"address\"\n                  onChange      = {this.updateState}\n                  value         = {this.state.address}\n                  onKeyPress    = {this.handleChange}\n                  ref           = {input => this.textInput3 = input }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formCity\">\n              <Form.Label column sm={2} className=\"card-label\">City:</Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  disabled      = {this.state.disableEdit}\n                  type          = \"text\"\n                  name          = \"city\"\n                  onChange      = {this.updateState}\n                  placeholder   = {this.state.city}\n                  value         = {this.state.city}\n                  onKeyPress    = {this.handleChange}\n                  ref           = {input => this.textInput4 = input }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPostalCode\">\n              <Form.Label column sm={2} className=\"card-label\">Postal Code</Form.Label>\n              <Col sm={4}>\n                <Form.Control\n                  disabled      = {this.state.disableEdit}\n                  type          = \"text\"\n                  name          = \"postalCode\"\n                  onChange      = {this.updateState}\n                  value         = {this.state.postalCode}\n                  placeholder   = {this.state.postalCode}\n                  onKeyPress    = {this.handleChange}\n                  ref           = {input => this.textInput5 = input }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formPhone\">\n              <Form.Label column sm={2} className=\"card-label\">Phone</Form.Label>\n              <Col sm={4}>\n                <Form.Control\n                  disabled      = {this.state.disableEdit}\n                  type          = \"text\"\n                  name          = \"phone\"\n                  onChange      = {this.updateState}\n                  value         = {this.state.phone}\n                  placeholder   = {this.state.phone}\n                  onKeyPress    = {this.handleChange}\n                  ref           = {input => this.textInput6 = input }\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n\n          \n          <Card.Header className=\"cardTitle message\">          \n            { this.state.message\n              ? this.state.message\n              : <span className=\"noMessage\">.</span> }\n          </Card.Header>\n\n          { !this.state.disableEdit\n            ?\n              <div className=\"gridBtnSC\">\n                <Button \n                  variant = \"success\" \n                  onClick = {this.handleSubmit} >\n                  Save\n                </Button>\n\n                <Button \n                  variant=\"warning\" \n                  onClick={ this.btnCancel } >\n                  Cancel\n                </Button>\n              </div>\n            :\n              <Button \n                className=\"gridBtnEdit\"\n                onClick = { this.editForm } >\n                Edit\n              </Button>\n          }\n          <br></br>\n          <br></br>\n\n        </Card>        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    storeToken  : store.token,\n    storeId     : store.id,\n    storeEmail  : store.email,\n    storeName   : store.name,\n\n    storeCity       : store.city,\n    storeAddress    : store.address,\n    storePostalCode : store.postalCode,\n    storePhone      : store.phone\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogin: user => dispatch({\n      type:\"LOGIN\",\n      data: user })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, { Component } from 'react';\nimport { Button, Form, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\n\nimport MaskedInput from 'react-text-mask';\n\nclass ClientNew extends Component {\n\n  state = {\n      name            : \"\",\n      nickname        : \"\",\n      birthday        : \"\",\n      mother          : \"\",\n      mPhone          : \"\",\n      mEmail          : \"\",\n      father          : \"\",\n      fPhone          : \"\",\n      fEmail          : \"\",      \n      consultant      : \"\",\n      cPhone          : \"\",\n      cEmail          : \"\",\n      defaultRate     : \"\",\n      message         : \"\"\n    }\n\n  handleChange = e => {\n    // if (e.key === \"Enter\")\n    //   switch(e.target.name) {\n    //     case \"name\":\n    //       if (this.state.name !== \"\")\n    //         this.textInput2.focus();\n    //       break;\n    //     case \"email\":\n    //       if (this.state.email !== \"\")\n    //         this.textInput4.focus();\n    //       break;\n    //     case \"password\":\n    //       if (this.state.password !== \"\")\n    //         this.textInput5.focus();\n    //       break;\n    //     case \"confirmPassword\":\n    //       if (this.state.confirmPassword !== \"\")\n    //         this.setState({ btnType: \"submit\" });\n    //       break;\n    //     default:                     \n    //   }\n// console.log(\"e.target.name\", e.target.name, \"e.target.value\", e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    // if (this.state.name.length > 60) {\n    //   alert(\"Name's maximun length is 60 characters.\");\n    //   this.textInput1.focus();\n    // } else if (this.state.email.length > 60) {\n    //   alert(\"Email's maximun length is 60 characters.\");\n    //   this.textInput2.focus();\n    // } else if (this.state.email !== \"\" && this.state.name !== \"\" && this.state.password !== \"\" && this.state.confirmPassword !== \"\") {\n    //   if (this.state.password !== this.state.confirmPassword) {\n    //     alert(\"Password and \\nConfirm Password fields\\n\\nMUST be the same.\");\n    //     this.setState({\n    //       password        : \"\",\n    //       confirmPassword : \"\"\n    //     })\n    //     this.textInput4.focus();\n      // } else {\n      if (this.state.name && this.state.nickname) {\n        const url = \"/client\";\n        // const url         = \"http://localhost:3333/client\";    // this is dev setting\n        const createClient  = {\n          name        : this.state.name,\n          nickname    : this.state.nickname,\n          birthday    : this.state.birthday,\n          mother      : this.state.mother,\n          mPhone      : this.state.mPhone,\n          mEmail      : this.state.mEmail,\n          father      : this.state.father,\n          fPhone      : this.state.fPhone,\n          fEmail      : this.state.fEmail,\n          consultant  : this.state.consultant,\n          cPhone      : this.state.cPhone,\n          cEmail      : this.state.cEmail,\n          defaultRate : this.state.defaultRate\n        }\nconsole.log(\"client sent: \", createClient);\n        try {\n          const addClient = await axios.post( \n            url, \n            createClient,\n            {  \n            headers: { \n              \"Content-Type\": \"application/json\",\n              \"Authorization\" : `Bearer ${this.props.storeToken}` }\n          });\n\n          if (addClient.data.message) {\nconsole.log(\"client added:\", addClient.data);  \n            this.setState({\n              message: addClient.data.message,\n\n              name        : \"\",\n              nickname    : \"\",\n              birthday    : \"\",\n              mother      : \"\",\n              mPhone      : \"\",\n              mEmail      : \"\",\n              father      : \"\",\n              fPhone      : \"\",\n              fEmail      : \"\",\n              consultant  : \"\",\n              cPhone      : \"\",\n              cEmail      : \"\",\n              defaultRate : \"\"\n            });\n\n          } else if (addClient.data.error) {\n            this.setState({\n              message : addClient.data.error });\n            }\n            \n          this.clearMessage();\n\n        } catch(err) {\n          this.setState({\n            message : err.message });\n\n          this.clearMessage();\n        }\n      } else {\n        if (!this.state.name)\n          this.textInput1.focus();\n        else\n          this.textInput2.focus();\n      }\n    }\n\n\n  //it clears the error message after 3.5s\n  clearMessage = () => {\n    setTimeout(() => {\n      this.setState({\n        message         : \"\"\n      })\n      this.textInput1.focus();\n    }, 3500);\n  }\n\n\n  afterChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Add New Client Page</h2>\n        <Card>\n          <Form\n            autoComplete  = \"off\"\n            onSubmit      = {this.handleSubmit}\n            className     = \"formPosition\"  >\n\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                autoFocus   = {true}\n                type        = \"text\"\n                placeholder = \"Type the client's name\"\n                name        = \"name\"\n                onChange    = {this.handleChange}\n                value       = {this.state.name}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput1 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formNickname\">\n              <Form.Label>Nickname</Form.Label>\n              <Form.Control\n                type        = \"text\"\n                placeholder = \"Type the client's nickname\"\n                name        = \"nickname\"\n                onChange    = {this.handleChange}\n                value       = {this.state.nickname}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput2 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBirthday\">\n              <Form.Label>Birthday</Form.Label>\n              <Form.Control\n                type        = \"date\"\n                placeholder = \"Type the client's birthday\"\n                name        = \"birthday\"\n                onChange    = {this.handleChange}\n                value       = {this.state.birthday}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput3 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formMother\">\n              <Form.Label>Mother</Form.Label>\n              <Form.Control\n                type        = \"text\"\n                placeholder = \"Type the client's mother name\"\n                name        = \"mother\"\n                onChange    = {this.handleChange}\n                value       = {this.state.mother}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput4 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formMPhone\">\n              <Form.Label>Mother's Phone</Form.Label>\n              <MaskedInput\n                mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                className   = \"form-control\"\n                placeholder = \"Enter mother's phone number\"\n                name        = \"mPhone\"\n                // guide={false}\n                id=\"mPhone\"\n                onBlur={e => this.afterChange(e)}\n                value       = {this.state.mPhone}\n                onKeyPress  = {() => this.handleChange}\n                ref         = {input => this.textInput5 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formMEmail\">\n              <Form.Label>Mother's Email address</Form.Label>\n              <Form.Control\n                type        = \"email\"\n                placeholder = \"Type the mother's email\"\n                name        = \"mEmail\"\n                onChange    = {this.handleChange}\n                value       = {this.state.mEmail}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput6 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFather\">\n              <Form.Label>Father</Form.Label>\n              <Form.Control\n                type        = \"text\"\n                placeholder = \"Type the client's father name\"\n                name        = \"father\"\n                onChange    = {this.handleChange}\n                value       = {this.state.father}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput7 = input }  />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFPhone\">\n              <Form.Label>Father's Phone</Form.Label>\n              <MaskedInput\n                mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                className   = \"form-control\"\n                placeholder = \"Enter father's phone number\"\n                name        = \"fPhone\"\n                // guide={false}\n                id          = \"fPhone\"\n                onBlur      = {e => this.afterChange(e)}\n                value       = {this.state.fPhone}\n                onKeyPress  = {() => this.handleChange}\n                ref         = {input => this.textInput8 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFEmail\">\n              <Form.Label>Father's Email address</Form.Label>\n              <Form.Control\n                type        = \"email\"\n                placeholder = \"Type the father's email\"\n                name        = \"fEmail\"\n                onChange    = {this.handleChange}\n                value       = {this.state.fEmail}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput9 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formConsultant\">\n              <Form.Label>Consultant</Form.Label>\n              <Form.Control\n                type        = \"text\"\n                placeholder = \"Type the consultant's name\"\n                name        = \"consultant\"\n                onChange    = {this.handleChange}\n                value       = {this.state.consultant}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput10 = input }  />\n            </Form.Group>\n\n            <Form.Group controlId=\"formCPhone\">\n              <Form.Label>Consultant's Phone</Form.Label>\n              <MaskedInput\n                mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                className   = \"form-control\"\n                placeholder = \"Enter consultant's phone number\"\n                name        = \"cPhone\"\n                // guide={false}\n                id          = \"cPhone\"\n                onBlur      = {e => this.afterChange(e)}\n                value       = {this.state.cPhone}\n                onKeyPress  = {() => this.handleChange}\n                ref         = {input => this.textInput11 = input } />\n            </Form.Group>\n\n            <Form.Group controlId=\"formCEmail\">\n              <Form.Label>Consultant's Email address</Form.Label>\n              <Form.Control\n                type        = \"email\"\n                placeholder = \"Type the consultant's email\"\n                name        = \"cEmail\"\n                onChange    = {this.handleChange}\n                value       = {this.state.cEmail}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput12 = input }  />\n            </Form.Group>\n\n            <Form.Group controlId=\"formDefaultRate\">\n              <Form.Label>Rate</Form.Label>\n              <Form.Control\n                type        = \"number\"\n                placeholder = \"Type the hourly rate - CAD$\"\n                name        = \"defaultRate\"\n                onChange    = {this.handleChange}\n                value       = {this.state.defaultRate}\n                onKeyPress  = {this.handleChange}\n                ref         = {input => this.textInput13 = input }  />\n            </Form.Group>\n\n            <Card.Header className=\"cardTitle message\">          \n              { this.state.message\n                ? this.state.message\n                : <span className=\"noMessage\">.</span> }\n            </Card.Header>\n\n            <Button \n              variant = \"primary\" \n              type    = \"submit\"\n              className=\"gridBtnEdit\" \n              >\n              Save\n            </Button>\n\n            <br></br>\n            <br></br>\n\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return {\n    storeToken: store.token\n  };\n};\n\n\nexport default connect(mapStateToProps, null)(ClientNew)\n","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"react-bootstrap\";\n\n\nclass GetClients extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients       : undefined,\n      errorMsg      : undefined\n    }\n  }\n\n  async componentDidMount() {\n    const url = \"/client\";    // this is dev setting\n    try {\n      const getClients = await axios.get( \n        url, \n        {  \n        headers: { \n          \"Content-Type\": \"application/json\",\n          \"Authorization\" : `Bearer ${this.props.storeToken}` }\n      });\nconsole.log(\"++getClients\", getClients.data.message);\n      if (getClients.data.count) {\n        this.setState({\n          clients: getClients.data.message\n        });\n      }\n    } catch(err) {\n      this.setState({\n        errorMsg: err.message });\n    }\n  }\n\n  populateDropbox = () => {\n    return(\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          {(this.props.client && this.props.client.nickname) || `Select Client` }\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {this.state.clients.map( (client, id) =>\n            <Dropdown.Item \n              key = { id } \n              // onClick = { () => this.changes(client) } \n              onClick = { (e) => this.changes(e, client) }\n              // data-client = { JSON.stringify(client) }\n              name = { client.nickname }\n            > { client.nickname } </Dropdown.Item>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n\n  changes = (event, incommingClient) => {\n    event.preventDefault();\n\n    // this.setState({\n    //   dropDownLabel: event.target.name\n    // });\n    // const client = JSON.parse(event.target.dataset.client);\n    // this.props.dispatchSetClient({ client });\n    // this.props.populateForm(client);\n    this.props.getClientInfo(incommingClient);\n  }\n\n\n  render() {\n    // console.log(\"rendering GetList!!\");\n    // console.log(\"this.state.clients\", this.state.clients);\n    return (\n      <div>\n        { this.state.clients\n        ? this.populateDropbox()\n        : \"No clients at all\" }\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return {\n    storeToken: store.token\n  };\n};\n\n\nexport default connect(mapStateToProps, null)(GetClients);\n","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {  Card, Button, Form } from \"react-bootstrap\";\nimport MaskedInput from 'react-text-mask';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport GetClients from \"./aux/GetClients.js\";\n\n\nclass ClientsList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message         : \"\",\n      disableEditForm : true,\n\n      clientId        : \"\",\n      name            : \"\",\n      nickname        : \"\",\n      birthday        : \"\",\n      mother          : \"\",\n      mPhone          : \"\",\n      mEmail          : \"\",\n      father          : \"\",\n      fPhone          : \"\",\n      fEmail          : \"\",\n      consultant      : \"\",\n      cPhone          : \"\",\n      cEmail          : \"\",\n      default_rate    : \"\",\n\n      tmp_name            : \"\",\n      tmp_nickname        : \"\",\n      tmp_birthday        : \"\",\n      tmp_mother          : \"\",\n      tmp_mPhone          : \"\",\n      tmp_mEmail          : \"\",\n      tmp_father          : \"\",\n      tmp_fPhone          : \"\",\n      tmp_fEmail          : \"\",\n      tmp_consultant      : \"\",\n      tmp_cPhone          : \"\",\n      tmp_cEmail          : \"\",\n      tmp_default_rate    : \"\",\n    }\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value || \"\"\n    });\n  }\n\n\n  handleChangeDate = incomingDate => {\n    // Im not able to grab e.targe.name and e.target.value\n    // console.log(\"e\",e)\n    // console.log(\"e\", e.target.name, e.target.selected);\n    // console.log(\"date\", date);\n    this.setState({\n      birthday: incomingDate\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const data = { \n      clientId      : this.state.clientId,\n      name          : this.state.name,\n      nickname      : this.state.nickname,\n      birthday      : this.state.birthday,\n      mother        : this.state.mother,\n      mPhone        : this.state.mPhone,\n      mEmail        : this.state.mEmail,\n      father        : this.state.father,\n      fPhone        : this.state.fPhone,\n      fEmail        : this.state.fEmail,\n      consultant    : this.state.consultant,\n      cPhone        : this.state.cPhone,\n      cEmail        : this.state.cEmail,\n      default_rate  : this.state.default_rate\n    };\nconsole.log(\"sending to save: \", data.birthday);\n    const url = `/client/${data.clientId}`;\n\n    try {\n      const newClientData = await axios.patch( \n        url,\n        data,\n        {  \n          headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${this.props.storeToken}` }\n      });\n\n      if (newClientData.data.message) {\n        this.setState({\n          message:      `${newClientData.data.newData.nickname} has been changed`,\n          name          : newClientData.data.newData.name,\n          nickname      : newClientData.data.newData.nickname,\n          birthday      : new Date(newClientData.data.newData.birthday.toLocaleString('en-US', { timeZone: \"UTC\" })),\n          mother        : newClientData.data.newData.mother,\n          mPhone        : newClientData.data.newData.mPhone,\n          mEmail        : newClientData.data.newData.mEmail,\n          father        : newClientData.data.newData.father,\n          fPhone        : newClientData.data.newData.fPhone,\n          fEmail        : newClientData.data.newData.fEmail,\n          cPhone        : newClientData.data.newData.cPhone,\n          cEmail        : newClientData.data.newData.cEmail,\n          consultant    : newClientData.data.newData.consultant,\n          default_rate  : newClientData.data.newData.default_rate\n        });\n      } else if (newClientData.data.error)\n        this.setState({\n          message: newClientData.data.error\n        });\n\n      this.cleanForm();\n      \n    } catch(err) {\n      this.setState({\n        message: err.message });\n      \n    }\n  }\n\n\n  cleanForm = () => {\n    this.setState({\n      disableEditForm: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        message: \"\"\n      });\n    }, 3000);\n  }\n\n\n  getClientInfo = client => {\n    this.populateForm(client);\n  }\n\n\n  populateForm = client => {\n    const {\n      _id, name, nickname,  mother, mPhone, mEmail, father, fPhone, fEmail, \n      consultant, cPhone, cEmail, default_rate } = client;\n    // const birthday = new Date(client.birthday);\n    // let utcDate = new Date(birthday.toLocaleString('en-US', { timeZone: \"UTC\" }));\n    const birthday = new Date(client.birthday.toLocaleString('en-US', { timeZone: \"UTC\" }));\n    this.setState({\n      clientId: _id,\n      name,\n      nickname,\n      // birthday: utcDate,\n      birthday,\n      mother,\n      mPhone,\n      mEmail,\n      father,\n      fPhone,\n      fEmail,\n      consultant,\n      cPhone,\n      cEmail,\n      default_rate,\n\n      disableEditForm: true\n    });\n  }\n\n\n  editForm = () => {\n    this.setState({\n      disableEditForm: false,\n\n      tmp_name            : this.state.name,\n      tmp_nickname        : this.state.nickname,\n      tmp_birthday        : this.state.birthday,\n      tmp_mother          : this.state.mother,\n      tmp_mPhone          : this.state.mPhone,\n      tmp_mEmail          : this.state.mEmail,\n      tmp_father          : this.state.father,\n      tmp_fPhone          : this.state.fPhone,\n      tmp_fEmail          : this.state.fEmail,\n      tmp_consultant      : this.state.consultant,\n      tmp_cPhone          : this.state.cPhone,\n      tmp_cEmail          : this.state.cEmail,\n      tmp_default_rate    : this.state.default_rate\n    });\n  }\n\n\n  btnCancel = () => {\n    this.setState({\n      disableEditForm: true,\n\n      name            : this.state.tmp_name,\n      nickname        : this.state.tmp_nickname,\n      birthday        : this.state.tmp_birthday,\n      mother          : this.state.tmp_mother,\n      mPhone          : this.state.tmp_mPhone,\n      mEmail          : this.state.tmp_mEmail,\n      father          : this.state.tmp_father,\n      fPhone          : this.state.tmp_fPhone,\n      fEmail          : this.state.tmp_fEmail,\n      consultant      : this.state.tmp_consultant,\n      cPhone          : this.state.tmp_cPhone,\n      cEmail          : this.state.tmp_cEmail,\n      default_rate    : this.state.tmp_default_rate      \n    });\n  }\n\n\n  afterChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n\n  render() {\n// console.log(\"this.state\", this.state);\n// console.log(\"moment:\", moment(this.state.birthday).format(\"D/M/YYYY\"));\n\n    return (\n      <div>\n        <h1> Your clients' list </h1>\n        <p>Select the client in order to check or modify their data.</p>\n\n        <Card style={{ width: '40rem' }}>\n        <Card.Body>\n          <Card.Title>Clients:</Card.Title>\n\n         <GetClients getClientInfo = { this.getClientInfo } />     { /* mount the Dropbox Button with all clients for the user */ }\n\n        </Card.Body>\n      </Card>        \n\n      { this.state.clientId\n        ? \n          <div>\n            <Card>\n              <Form autoComplete=\"off\"\n                onSubmit  = {this.handleSubmit}\n                className = \"formPosition\" >\n\n                <Form.Group controlId=\"formName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    // autoFocus   = {true}\n                    type        = \"text\"\n                    placeholder = {this.state.name || \"Type the client's name\"}\n                    name        = \"name\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.name}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    // ref         = {input => this.textInput1 = input }\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formNickname\">\n                  <Form.Label>Nickname</Form.Label>\n                  <Form.Control\n                    type        = \"text\"\n                    placeholder = {this.state.nickname || \"Type the client's nickname\"}\n                    name        = \"nickname\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.nickname}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    // ref         = {input => this.textInput2 = input } \n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBirthday\">\n                  <Form.Label>Birthday</Form.Label>\n                  <br />\n                  <DatePicker\n                    selected  = {this.state.birthday}\n                    onSelect  ={this.handleChangeDate}\n                    dateFormat=\"dd/MM/yyyy\"\n                    // onChange = {this.handleChangeDate}\n                    className = \"form-control\"\n                    disabled  = {this.state.disableEditForm}\n                  />\n                  <br />\n                </Form.Group>\n\n                <Form.Group controlId=\"formMother\">\n                  <Form.Label>Mother</Form.Label>\n                  <Form.Control\n                    type        = \"text\"\n                    placeholder = { this.state.mother || \"Type the client's mother name\"}\n                    name        = \"mother\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.mother}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput4 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formMPhone\">\n                  <Form.Label>Mother's Phone</Form.Label>\n                  <MaskedInput\n                    mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                    className   = \"form-control\"\n                    placeholder = \"Enter mother's phone number\"\n                    name        = \"mPhone\"\n                    id          = \"mPhone\"\n                    onBlur      = {e => this.afterChange(e)}\n                    value       = {this.state.mPhone}\n                    onKeyPress  = {() => this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput5 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formMEmail\">\n                  <Form.Label>Mother's Email address</Form.Label>\n                  <Form.Control\n                    type        = \"email\"\n                    placeholder = {this.state.mEmail || \"Type the mother's email\"}\n                    name        = \"mEmail\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.mEmail}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput6 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFather\">\n                  <Form.Label>Father</Form.Label>\n                  <Form.Control\n                    type        = \"text\"\n                    placeholder = {this.state.father || \"Type the client's father name\"}\n                    name        = \"father\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.father}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput7 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFPhone\">\n                  <Form.Label>Father's Phone</Form.Label>\n                  <MaskedInput\n                    mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                    className   = \"form-control\"\n                    placeholder = \"Enter father's phone number\"\n                    name        = \"fPhone\"\n                    id          = \"fPhone\"\n                    onBlur      = {e => this.afterChange(e)}\n                    value       = {this.state.fPhone}\n                    onKeyPress  = {() => this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput8 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFEmail\">\n                  <Form.Label>Father's Email address</Form.Label>\n                  <Form.Control\n                    type        = \"email\"\n                    placeholder = {this.state.fEmail || \"Type the father's email\"}\n                    name        = \"fEmail\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.fEmail}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput9 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formConsultant\">\n                  <Form.Label>Consultant</Form.Label>\n                  <Form.Control\n                    type        = \"text\"\n                    placeholder = {this.state.consultant || \"Type the consultant's name\"}\n                    name        = \"consultant\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.consultant}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput10 = input }  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formCPhone\">\n                  <Form.Label>Consultant's Phone</Form.Label>\n                  <MaskedInput\n                    mask        = {['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                    className   = \"form-control\"\n                    placeholder = \"Enter consultant's phone number\"\n                    name        = \"cPhone\"\n                    // guide={false}\n                    id          = \"cPhone\"\n                    onBlur      = {e => this.afterChange(e)}\n                    value       = {this.state.cPhone}\n                    onKeyPress  = {() => this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput11 = input } />\n                </Form.Group>\n\n                <Form.Group controlId=\"formCEmail\">\n                  <Form.Label>Consultant's Email address</Form.Label>\n                  <Form.Control\n                    type        = \"email\"\n                    placeholder = {this.state.cEmail || \"Type the consultant's email\"}\n                    name        = \"cEmail\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.cEmail}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput12 = input }  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formDefaultRate\">\n                  <Form.Label>Rate</Form.Label>\n                  <Form.Control\n                    type        = \"text\"\n                    placeholder = {this.state.default_rate || \"Type the hourly rate - CAD$\"}\n                    name        = \"default_rate\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.default_rate}\n                    onKeyPress  = {this.handleChange}\n                    disabled    = {this.state.disableEditForm}\n                    ref         = {input => this.textInput13 = input }  />\n                </Form.Group>\n\n\n\n\n\n          <Card.Header className=\"cardTitle message\">          \n            { this.state.message\n              ? this.state.message\n              : <span className=\"noMessage\">.</span> }\n          </Card.Header>\n\n          { !this.state.disableEditForm\n            ?\n              <div className=\"gridBtnSC\">\n                <Button \n                  variant = \"success\" \n                  onClick = {this.handleSubmit} >\n                  Save\n                </Button>\n\n                <Button \n                  variant=\"warning\" \n                  onClick={ this.btnCancel } >\n                  Cancel\n                </Button>\n              </div>\n            :\n              <Button \n                className=\"gridBtnEdit\"\n                onClick = { this.editForm } >\n                Edit\n              </Button>\n          }\n          <br></br>\n          <br></br>\n\n              </Form>\n            </Card>\n\n          </div>\n        : null\n      }\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return {\n    storeToken    : store.token\n  };\n};\n\n\n\nexport default connect(mapStateToProps, null)(ClientsList);\n","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {  Card, Button, Form, Row, Col } from \"react-bootstrap\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport GetClients from \"./aux/GetClients.js\";\n// import DateRangePicker from \"./aux/DateRangePicker.js\";\n\n\nclass PunchInNew extends Component {\n\n  state = {\n    date          : \"\",\n    startingTime  : \"\",\n    endingTime    : \"\",\n    rate          : \"\",\n    notes         : \"\",\n    message       : \"\",\n    client        : {}\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n\n    this.cleanMessage();\n  }\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\nconsole.log(\"inside onSubmit\");\n\n    const data = { \n      // date      : new Date(this.state.date.toLocaleString('en-US', { timeZone: \"UTC\" })),\n      date      : (new Date(this.state.date).getTime()),\n      timeStart : this.state.startingTime,\n      timeEnd   : this.state.endingTime,\n      rate      : this.state.rate,\n      notes     : this.state.notes,\n      clientId  : this.state.client._id };\n\n      console.log(`  \n                    client = ${data.clientId}\n                    date = ${data.date}\n                      ts  = ${data.timeStart}\n                      te  = ${data.timeEnd}\n                    rate = ${data.rate} `);\n    // if ( !data.clientId || !data.date || !data.timeStart || !data.timeEnd || !data.rate){\n    //   this.messageValidationMethod();\n    // }\n    if (1===2){}\n    else {\nconsole.log(\"xxxxxxxx\")    \n      const url = \"/clockin\";\n      try {\n        const addClockin = await axios.post( \n          url,\n          data,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\",\n              \"Authorization\" : `Bearer ${this.props.storeToken}` }\n        })\n\n        if (addClockin.data.message) {\n          this.setState({\n            message: `Punched in!`\n          });\n        } else if (addClockin.data.error)\n          this.setState({\n            message: addClockin.data.error\n          });\n\n        // this.cleanForm();\n        \n      } catch(err) {\n        this.setState({\n          message: err.message });\n        // this.cleanForm();\n      }\n    }\n  }\n\n\n  messageValidationMethod = () => {\n    this.setState({\n      message: !this.state.client ? \"Please, select client.\" : \"Please fill the fields.\"\n    });\n\n    // setTimeout(() => {\n    //   this.cleanMessage();\n    // }, 3000);\n  }\n\n\n  cleanMessage = () => {\n      this.setState({\n        message: \"\"\n      });\n  }\n\n\n  cleanForm = () => {\n    setTimeout(() => {\n      this.setState({\n        date          : \"\",\n        startingTime  : \"\",\n        endingTime    : \"\",\n        rate          : \"\",\n        notes         : \"\",\n        message       : \"\",\n        client        : {}\n      });\n    }, 3000);\n  }\n\n\n  showTotalTime = () => {\n    const time1 = Date.parse(`01 Jan 1970 ${(this.state.startingTime)}:00 GMT`);\n    const time2 = Date.parse(`01 Jan 1970 ${this.state.endingTime}:00 GMT`);\n\n    return(\n      <Form.Group as={Row} controlId=\"formTotal\">\n        <Form.Label column sm=\"9\" >Total time: {((time2 - time1) / (60 * 60 * 1000))} hr</Form.Label>\n      </Form.Group>\n    )\n  }\n\n  getClientInfo = client => {\nconsole.log(\"inside getclientInfo - client: \", client);\n\n// setTimeout(() => \n  this.setState({\n    client  : client,\n    rate    : client.default_rate\n  })\n    // console.log(\"this.state.rate\", this.state.rate)\n    // , 0);\n  }\n\n  render() {\nconsole.log(\"this.state\", this.state);\n    return (\n      <div>\n        <h1>\n          PunchIn New over here CLASS\n        </h1>\n        <p>changing state after componentDidMount and working on looping of a list of items</p>\n\n        <Card style={{ width: '40rem' }}>\n        <Card.Body>\n          <Card.Title>Punch in</Card.Title>\n\n          { /* mount the Dropbox Button with all clients for the user */ }\n          <div className=\"gridClientBtContainer\">\n            <GetClients \n              client        = { this.state.client }\n              getClientInfo = { this.getClientInfo } />\n              \n            <span>\n              { this.state.message ? this.state.message : \"\" }\n            </span>\n          </div>\n\n\n          <br></br>\n          <Form onSubmit={this.handleSubmit} >\n\n            <Form.Group as={Row} controlId=\"formDate\">\n              <Form.Label column sm=\"3\">Date:</Form.Label>\n              <Col sm=\"6\">\n                <Form.Control \n                  type        = \"date\"\n                  name        = \"date\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.date}\n                  onKeyPress  = {this.handleChange}\n                  disabled    = {( this.state.rate === \"\" ) ? true : false } />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formST\">\n              <Form.Label column sm=\"3\" >Time Start:</Form.Label>\n              <Col sm=\"3\">\n                <Form.Control\n                  type        = \"time\"\n                  placeholder = \"Starting Time\"\n                  name        = \"startingTime\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.startingTime}\n                  onKeyPress  = {this.handleChange}\n                  disabled    = {( this.state.rate === \"\" ) ? true : false } />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formET\">\n              <Col sm=\"3\">\n                <Form.Label>Time End:</Form.Label>\n              </Col>\n              <Col sm=\"3\">\n                <Form.Control                \n                  type        = \"time\"\n                  placeholder = \"Ending Time\"\n                  name        = \"endingTime\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.endingTime}\n                  onKeyPress  = {this.handleChange}\n                  disabled    = {( this.state.rate === \"\" ) ? true : false } />\n              </Col>\n\n              <Col sm=\"6\">\n                { (this.state.endingTime && this.state.startingTime)\n                  ? this.showTotalTime()\n                  : null }\n              </Col>\n\n              \n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formRate\">\n              <Form.Label column sm=\"3\" >Rate</Form.Label>\n              <Col sm=\"3\">\n                <Form.Control\n                  type        = \"number\"\n                  placeholder = { this.state.rate || \"Rate ($)\"}\n                  name        = \"rate\"\n                  onChange    = {this.handleChange}\n                  onKeyPress  = {this.handleChange}\n                  value       = {this.state.rate}\n                  disabled    = {( this.state.rate === \"\" ) ? true : false } />\n              </Col>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Notes</Form.Label>\n              <Form.Control\n                as          = \"textarea\"\n                rows        = \"3\"\n                // type        = \"text\"\n                placeholder = \"Session's Notes\"\n                name        = \"notes\"\n                onChange    = {this.handleChange}\n                value       = {this.state.notes}\n                onKeyPress  = {this.handleChange}\n                disabled    = {( this.state.rate === \"\" ) ? true : false } />\n            </Form.Group>\n\n            <Button \n              variant=\"primary\" \n              type= \"submit\" \n              onClick = { this.handleSubmit } >\n              Submit\n            </Button>            \n            \n            {/* <span>\n              { this.state.message ? this.state.message : \"\" }\n            </span> */}\n\n          </Form>\n        </Card.Body>\n      </Card>        \n\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return {\n    storeToken    : store.token\n    // storeRate     : store.client_dr,\n    // storeClientId : store.client_id\n  };\n};\n\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     dispatchLogin: user => dispatch({\n//       type:\"LOGIN\",\n//       data: user })\n//   };\n// };\n\n\nexport default connect(mapStateToProps, null)(PunchInNew);\n","import React, { Component, Fragment } from 'react'\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {  Card, Button, Form, Row, Col, Table } from \"react-bootstrap\";\n\nimport GetClients from \"./aux/GetClients.js\";\n\n\nclass PunchInsList extends Component {\n\n  constructor(props) {\n    super(props);\n\n  this.state = {\n    dateStart         : \"\",\n    dateEnd           : \"\",\n    clientId          : \"\",\n    clockinList       : [],\n    clockInListTable  : \"\",\n    tableVisibility   : false,\n    message           : \"\",\n    client            : {},\n    cleanButton       : false\n  }\n}\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const\n      dateStart = this.state.dateStart,\n      dateEnd   = this.state.dateEnd,\n      clientId  = this.state.clientId;\n\n    const url = `/clockin?dateStart=${dateStart}&dateEnd=${dateEnd}&clientId=${clientId}`;\n\n    if (clientId) {\n      try {\n        const getClockins = await axios.get( \n          url,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\",\n              \"Authorization\" : `Bearer ${this.props.storeToken}` }\n        });\n\n        if (getClockins.data.allClockins){\n          this.setState({\n            clockinList       : getClockins.data.allClockins,\n            // client            : getClockins.data.client,\n            clockInListTable  : this.renderDataTable(getClockins.data.allClockins, getClockins.data.client),\n            tableVisibility   : true,\n            cleanButton       : true\n          });\n        } else {\n          this.setState({\n            message: getClockins.data.message\n          });\n\n          this.cleanMessage();\n        }\n      } catch(err) {\n        this.setState({\n          message: err.message\n        });\n        \n      }\n    } else\n      this.messageValidationMethod();\n  }\n\n\n  renderDataTable = (clockins, client) => {\n    return clockins.map((clockin, index) => {\n      const dt = new Date(clockin.date);\n      const ts = new Date(clockin.time_start);\n      const te = new Date(clockin.time_end);\n      const clockinsToSend = {\n        num         : index + 1,\n        date        : dt.getFullYear() + \"-\" + (dt.getMonth() + 1) + \"-\" + dt.getDate(),\n        timeStart   : ts.getHours() + \":\" + (ts.getMinutes() < 10 ? (\"0\" + ts.getMinutes()) : ts.getMinutes()),\n        timeEnd     : te.getHours() + \":\" + (te.getMinutes() < 10 ? (\"0\" + te.getMinutes()) : te.getMinutes()),\n        rate        : clockin.rate,\n        totalTime   : ((te - ts) / ( 60 * 60 * 1000)),\n        total       : ((te - ts) / ( 60 * 60 * 1000)) * (Number(clockin.rate)),\n        invoice     : clockin.invoice_id ? clockin.invoice_id : \"not yet\"\n      }\n\n      return (\n        <tr key={clockinsToSend.num}>\n          <td>{clockinsToSend.num}</td>\n          <td>{client}</td>\n          <td>{clockinsToSend.date}</td>\n          <td>{clockinsToSend.timeStart}</td>\n          <td>{clockinsToSend.timeEnd}</td>\n          <td>{clockinsToSend.totalTime}</td>\n          <td>{clockinsToSend.rate}</td>\n          <td>{clockinsToSend.total}</td>\n          <td>{clockinsToSend.invoice}</td>\n          <td>\n            <Button\n              variant   = \"info\"\n              // onClick   = {() => this.handleCallEdit(userToSend)}    // call modal to edit the clockin without invoice related to\n              // data-user = {JSON.stringify(userToSend)}\n            > Edit</Button>\n          </td>\n        </tr>\n      )\n    })\n  }  \n\n\n  cleanForm = () => {\n    this.setState({\n      date            : \"\",\n      timeStart       : \"\",\n      timeEnd         : \"\",\n      rate            : \"\",\n      clientId        : \"\",\n      message         : \"\",\n      client          : {},\n      tableVisibility : false,\n      cleanButton     : false\n    });\n  }\n\n\n  messageValidationMethod = () => {\n    this.setState({\n      message: \"Please, select client.\"\n    });\n\n    setTimeout(() => {\n      this.cleanMessage();\n    }, 3000);\n  }\n\n\n  cleanMessage = () => {\n      this.setState({\n        message: \"\"\n      });\n  }\n\n\n  getClientInfo = client => {\n    this.setState({\n      client  : client,\n      clientId : client._id\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>\n          List of Punch ins\n        </h1>\n        <p>some random text</p>\n\n        <Card style={{ width: '40rem' }}>\n          <Card.Body>\n\n          { /* mount the Dropbox Button with all clients for the user */ }\n          <div className=\"gridClientBtContainer\">\n            <GetClients\n              client        = { this.state.client }\n              getClientInfo = { this.getClientInfo } />\n\n            <span>\n              { this.state.message || \"\" }\n            </span>\n          </div>\n\n\n            <br></br>\n            <Form >\n\n              <Form.Group as={Row} controlId=\"formST\">\n                <Form.Label column sm=\"3\" >Date Start:</Form.Label>\n                <Col sm=\"5\">\n                  <Form.Control\n                    type        = \"date\"\n                    name        = \"dateStart\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.dateStart}\n                    // onKeyPress  = {this.handleChange}\n                    // ref         = {input => this.textInput2 = input } \n                    />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formET\">\n                <Col sm=\"3\">\n                  <Form.Label>Date End:</Form.Label>\n                </Col>\n                <Col sm=\"5\">\n                  <Form.Control                \n                    type        = \"date\"\n                    name        = \"dateEnd\"\n                    onChange    = {this.handleChange}\n                    value       = {this.state.dateEnd}\n                    // onKeyPress  = {this.handleChange}\n                    // ref         = {input => this.textInput3 = input } \n                    />\n                </Col>\n              </Form.Group>\n\n              <Button \n                variant=\"primary\" \n                onClick = { this.handleSubmit } >\n                Get List\n              </Button>        \n\n              { this.state.cleanButton\n                ? \n                  <Button variant=\"info\" onClick = { this.cleanForm }>\n                    Clean\n                  </Button>\n                : null }\n            </Form>\n          </Card.Body>\n        </Card>\n\n\n        { this.state.tableVisibility\n          ?\n            <Card id=\"clockinListResult\" >\n              {(this.state.clockinList.length > 0) \n                ? <Table striped bordered hover size=\"sm\" responsive>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>Client</th>\n                        <th>Date</th>\n                        <th>Time Start</th>\n                        <th>Time End</th>\n                        <th>Total Time</th>\n                        <th>Rate</th>\n                        <th>Total CAD$</th>\n                        <th>Invoice</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.clockInListTable}\n                    </tbody>\n                  </Table> \n                : null }\n            </Card>\n          : null }\n\n        </Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return {\n    storeToken    : store.token,\n    // storeClientId : store.client_id\n  };\n};\n\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     dispatchLogin: user => dispatch({\n//       type:\"LOGIN\",\n//       data: user })\n//   };\n// };\n\n\nexport default connect(mapStateToProps, null)(PunchInsList);\n","import React, { Component } from 'react'\nimport { Button } from \"react-bootstrap\";\nimport \"../PdfTemplate.css\";\n\n// export default function PdfTemplate(props) {\nexport default class PdfTemplate extends Component {\n  // const x = `{&nbsp;&nbsp;}`;\n\n  generatePdf = () => {\nconsole.log(\"inside generatePdf\");\n  }\n\n\n  contentBody = \n    <div>\n      <div className=\"page\">\n        <div className=\"header\">\n          <h1>\n            INVOICE\n          </h1>\n          <div className=\"box\">\n            Invoice Date\n          </div>\n          <div className=\"box\">\n            Invoice Number\n          </div>\n        </div>\n\n        <h4 className=\"wholeLine\">\n          Service Provider Name: {this.props.client}\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          Mailing Addres:\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          City:\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          Postal Code:\n        </h4>\n        \n        <h4>\n          <span className=\"wholeLine\">\n            Phone Number:&nbsp;&nbsp;(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n        </h4>\n        \n\n        <h4>\n          If payee is different from above complete this section\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          Payee Name:\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          Mailing Addres:\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          City:\n        </h4>\n\n        <h4 className=\"wholeLine\">\n          Postal Code:\n        </h4>\n        \n        <h4>\n          <span className=\"wholeLine\">\n            Phone Number:&nbsp;&nbsp;(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n        </h4>\n\n        <h4>\n          <span>\n            Bill To:\n          </span>\n\n          <span>\n            Autism Funding Branch\n            Ministry of Children and Family Development\n            PO Box 9776 STN PROV GOVT\n            Victory BC V8W 9S5\n          </span>\n        </h4>\n\n        <h4>\n          Billing Number: &nbsp;&nbsp;&nbsp;&nbsp;\n          <span className=\"wholeLine\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n        </h4>\n        <h4>\n          Client Name: &nbsp;&nbsp;&nbsp;&nbsp;\n          <span className=\"wholeLine\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </span>\n        </h4>\n\n      </div>\n    </div>\n\n  render() {\nconsole.log(\"this.props\", this.props);\n    return(\n      <div>\n        <h2> Invoice's Preview</h2>\n        <Button onClick={this.generatePdf}>\n          Generate Pdf\n        </Button>\n        {this.contentBody}\n        {this.props.clockinsTable}\n      </div>\n    )\n  }\n  \n}\n","import React, { Component, Fragment } from 'react'\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {  Card, Button, Form, Row, Col, Table } from \"react-bootstrap\";\n\nimport GetClients from \"./aux/GetClients.js\";\nimport PdfTemplate from \"./PdfTemplate.js\";\n\n\nclass InvoiceNew extends Component {\n\n  state = {\n    dateStart         : \"\",\n    dateEnd           : \"\",\n    clientId          : this.props.storeClientId,\n    clockinList       : [],\n    client            : \"\",\n    clockInListTable  : \"\",\n    tableVisibility   : false,\n    showPreview       : false\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\n// this.setState({\n//   showPreview: true\n// });\n// return;\n    const\n      dateStart = this.state.dateStart,\n      dateEnd   = this.state.dateEnd,\n      clientId  = this.props.storeClientId ;\n\n    const url = `/clockin?dateStart=${dateStart}&dateEnd=${dateEnd}&clientId=${clientId}`;\n    ///\n    //\n    //\n    //\n    //\n    //\n//\n\n\n    try {\n      const getClockins = await axios.get( \n        url,\n        {  \n          headers: { \n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${this.props.storeToken}` }\n      });\nconsole.log(\"getClockins\", getClockins.data.allClockins);\n\n      if (getClockins.data.allClockins){\nconsole.log(\"alrigth\");\n        this.setState({\n          clockinList       : getClockins.data.allClockins,\n          client            : getClockins.data.client,\n          clockInListTable  : this.renderDataTable(getClockins.data.allClockins, getClockins.data.client),\n          clientId,\n          // tableVisibility   : \"showTable\",\n          tableVisibility   : true,\n          showPreview       : true\n        });\n      }\nconsole.log(\"--- this.state\", this.state);\n    } catch(err) {\nconsole.log(\"errorrrrr\");\n      this.setState({\n        message: err.message });\n      \n      this.cleanForm();\n    }\n  }\n\n\n  renderDataTable = (clockins, client) => {\nconsole.log(\"inside rednderDataTable\", clockins);\n    return clockins.map((clockin, index) => {\n      const dt = new Date(clockin.date);\n      const ts = new Date(clockin.time_start);\n      const te = new Date(clockin.time_end);\n      const clockinsToSend = {\n        index,\n        date        : dt.getFullYear() + \"-\" + (dt.getMonth() + 1) + \"-\" + dt.getDate(),\n        // timeStart   : ts.getHours() + \":\" + (ts.getMinutes() < 10 ? (\"0\" + ts.getMinutes()) : ts.getMinutes()),\n        // timeEnd     : te.getHours() + \":\" + (te.getMinutes() < 10 ? (\"0\" + te.getMinutes()) : te.getMinutes()),\n        rate        : clockin.rate,\n        totalTime   : ((te - ts) / ( 60 * 60 * 1000)),\n        total       : ((te - ts) / ( 60 * 60 * 1000)) * (Number(clockin.rate))\n      }\nconsole.log(\"clockinsToSend\", clockinsToSend);\n\n      return (\n        <tr key={clockinsToSend.index}>\n          <td>Behavior intervention</td>\n          <td>{clockinsToSend.date}</td>\n          <td>{clockinsToSend.totalTime}</td>\n          <td>{clockinsToSend.rate}</td>\n          <td>{clockinsToSend.total}</td>\n        </tr>\n      )\n    })\n  }  \n\n\n  cleanForm = () => {\n    setTimeout(() => {\n      this.setState({\n        date            : \"\",\n        timeStart       : \"\",\n        timeEnd         : \"\",\n        rate            : \"\",\n        notes           : \"\",\n        message         : \"\",\n        tableVisibility : false\n      });\n    }, 3000);\n  }\n\n  invoicePdfPreview = () => {\n    const clockinsTable = \n      <Table striped bordered hover size=\"sm\" responsive>\n        <thead>\n          <tr>\n            <th>Type of Service</th>\n            <th>Dates</th>\n            <th># of Hours</th>\n            <th>Rate Per Hour - inclusive of PST if applicable</th>\n            <th>Total Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.clockInListTable}\n        </tbody>\n      </Table> \n\n      return(\n        <PdfTemplate \n            client        = {this.state.client} \n            clockinsTable = {clockinsTable} />\n      )\n  }\n\n\n  render() {\n    return (\n      <div>\n        {console.log(\"this.showPreview\", this.state.client)};\n        { this.state.showPreview\n          ? this.invoicePdfPreview()\n          :\n      <Fragment>\n        <h1>\n          Invoice generator\n        </h1>\n        <p>In order to generate the invoice, please select the client and the range of dates.</p>\n\n        <Card style={{ width: '40rem' }}>\n        <Card.Body>\n\n         <GetClients />     { /* mount the Dropbox Button with all clients for the user */ }\n\n          <br></br>\n          <Form onSubmit={this.handleSubmit} >\n\n            <Form.Group as={Row} controlId=\"formST\">\n              <Form.Label column sm=\"3\" >Date Start:</Form.Label>\n              <Col sm=\"5\">\n                <Form.Control\n                  type        = \"date\"\n                  name        = \"dateStart\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.dateStart} />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formET\">\n              <Col sm=\"3\">\n                <Form.Label>Date End:</Form.Label>\n              </Col>\n              <Col sm=\"5\">\n                <Form.Control                \n                  type        = \"date\"\n                  name        = \"dateEnd\"\n                  onChange    = {this.handleChange}\n                  value       = {this.state.dateEnd} />\n              </Col>\n            </Form.Group>\n\n          <Button variant=\"primary\" type= \"submit\" onClick = { this.handleSubmit }>\n            Invoice Preview\n          </Button>            \n            \n          </Form>\n        </Card.Body>\n      </Card>\n\n\n      { this.state.tableVisibility\n        ?\n          <Card id=\"clockinListResult\"  >\n            {(this.state.clockinList.length > 0) \n              ? <Table striped bordered hover size=\"sm\" responsive>\n                  <thead>\n                    <tr>\n                      <th>Type of Service</th>\n                      <th>Dates</th>\n                      <th># of Hours</th>\n                      <th>Rate Per Hour - inclusive of PST if applicable</th>\n                      <th>Total Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.clockInListTable}\n                  </tbody>\n                </Table> \n              : null }\n            {/* <CSVLink\n                data      = {this.state.dataTableCSVFile}\n                headers   = {fileHeaders}\n                separator = {\";\"}\n                filename  = {(this.state.dropDownBtnName === \"Wanna consider user's type?\") ?\n                                          \"userList.csv\" :\n                                          `${this.state.dropDownBtnName}.csv`}\n                className = \"btn btn-primary\"\n                target    = \"blank\" >\n                Download me\n            </CSVLink>             */}\n          </Card>\n        : null }\n\n          </Fragment>\n        }\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = store => {\n  return {\n    storeToken    : store.token\n  };\n};\n\n\n\nexport default connect(mapStateToProps, null)(InvoiceNew);\n","import React from 'react';\nimport \"../About.css\";\n\nexport default function Error() {\n  return (\n    <div className=\"page-general\">\n      <h1>About</h1>\n      <div className=\"content-general\">\n        <h1 className=\"main-title\">ClockinJS</h1>\n\n        <p>The system is aimed to allow register clock-ins and generate invoices.</p>\n\n        <h2 className=\"sub-title\">Some of its functionalities are:</h2>\n\n        <ul>\n          <li>\n            User´s register\n          </li> \n          <li>\n            User´s login\n          </li>\n          <li>\n            User modify their own data\n          </li>\n          <li>\n            Users are able to:\n          </li>\n          <li>\n            Register clients,\n          </li>\n          <li>\n            List, Check, and Modify client´s data,\n          </li>\n          <li>\n            Punch in their hours,\n          </li>\n          <li>\n            List, Check and Edit clock-ins data,\n          </li>\n          <li>\n            Generate invoice and control their status (generated, sent and received),\n          </li>\n          <li>\n            List and Check invoices.\n          </li>\n        </ul>\n\n\n        <h2 className=\"sub-title\">System main actors</h2>\n        <ol>\n          <li>\n            <span className=\"strong\">User:</span>\n              People who have clients and want to register their worked hours.\n          </li>\n          <li>\n            <span className=\"strong\">Client:</span>\n              People or organizations which the users provide their service.\n          </li>\n          <li>\n            <span className=\"strong\">Clock-in:</span>\n              It is the start and end time in which the users worked for a client.\n          </li>\n          <li>\n            <span className=\"strong\">Invoice:</span>\n              It is one or a set of clock-ins for a particular client that a user wants to generate. It will contain information about the user, the client, the description of hours worked, and the total amount of money accumulated for the user regarding that specific client. The invoice can be generated according to the user's necessity ( weekly, monthly).\n              The invoice format is complained to the Government of Canada...\n          </li>\n        </ol>\n\n        <h2 className=\"sub-title\">Motivation</h2>\n        <p>\n          I have been developing the ClockinJS to help my wife to register data and control their worked hours for her behavior intervention clients. The system facilitates the administration of the data (hours, invoice, clients) of her clients and allows a fast and reliable emission of a monthly invoice addressed to the Autism BC.\n        </p>\n        <p>\n          The system will be used for my wife to help her to control her work hours plus will automate the invoice´s generation. However, this is not necessary or asked for her clients or any governmental agency of any country. It is for her own control, but it can be used for anyone. The invoices that this system will generate are complained to a public format and can be reached on the internet.\n        </p>\n        <p>\n          In a general view, the system has two process: Punch-in and Invoice's generation. The first one independ to the second. It means it can be used without generate invoices, only to registering the puch-ins. The second on (invoice's process) depend on the clock-ins recorded in the system.\n        </p>\n\n        <h2 className=\"sub-title\">Teck stack</h2>\n        <p>\n          MERN - MongoDB, Express, React and Node, plus JWT, React, Bootstrap, and Bcrypt are the main technologies used.\n        </p>\n\n        <h2 className=\"sub-title\">Todo list and Releases</h2>\n        <p>The system is in production and being used by my wife to record and list their hours for her clients.</p>\n        <p>Features under developing are:</p>\n        <ul>\n          <li>Change password (being logged)</li>\n          <li>Forget password (captcha + send by email - Mailgun)</li>\n          <li>Edit Clockin</li>\n          <li>Generate Invoices</li>\n          <li>Review invoice backend code,</li>\n          <li>Generate invoice's UI,</li>\n          <li>Process (control invoice's status),</li>\n          <li>Adapt pdf to receive data from the system.</li>\n        </ul>\n\n        <h3 className=\"sub-title\">Contact</h3>\n          <p> Tony Kieling's: </p>\n            <ul>\n              <li>\n                <a href=\"mailto:tony.kieling@gmail.com\" target=\"_top\">Gmail - tony.kieling@gmail.com</a> \n                <br />\n              </li>\n              <li>\n                <a href=\"https://www.linkedin.com/in/tony-kieling/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n                <br />\n              </li>\n              <li>\n                <a href=\"https://github.com/tonykieling\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> \n                <br />\n              </li>\n              <li>\n                <a href=\"https://resume.creddle.io/resume/hqaeq2fbnr6\" target=\"_blank\" rel=\"noopener noreferrer\">Resume</a> <br />\n              </li>\n                <br /><br />\n            </ul>\n\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport { connect } from \"react-redux\";\n\nimport Land         from \"./component/Land.js\";\nimport NoPage       from \"./component/Error.js\";\nimport SysHeader    from \"./component/SysHeader.js\";\nimport Register     from './component/Register.js';\nimport Login        from \"./component/Login.js\";\n// import decodeToken from \"./component/aux/decodeToken.js\";\nimport Home         from \"./component/Home.js\";\nimport User         from \"./component/User.js\";\nimport ClientNew    from \"./component/ClientNew.js\";\nimport ClientList   from \"./component/ClientsList.js\";\nimport PunchInNew   from \"./component/PunchInNew.js\";\nimport PunchInsList from \"./component/PunchInsList.js\";\nimport InvoiceNew   from \"./component/InvoiceNew.js\";\nimport About        from \"./component/About.js\";\n// import InvoicesList from \"./component/InvoicesList.js\";\n\nimport PdfTemplate from \"./component/PdfTemplate.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <SysHeader />\n          <Switch>\n            <Route exact path = \"/\" \n              render = {() => {\n                if(!this.props.storeEmail) {\n                  return <Redirect to = \"/land\" />\n                }\n                else\n                  return <Home />\n              }} />\n\n          <Route exact path = \"/user\" \n              render = {() => {\n                if(!this.props.storeEmail) {\n                  return <Redirect to = \"/land\" />\n                }\n                else\n                  return <User />\n              }} />\n\n            <Route exact path = \"/land\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Land />\n                else\n                  return <Redirect to = \"/\" />\n              }} />\n\n            <Route exact path = \"/register\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Register />\n                else\n                  return <Redirect to = \"/\" />\n              }} />\n            \n            <Route exact path = \"/login\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <Redirect to = \"/\" />\n              }} />\n            \n            <Route exact path = \"/clientNew\" \n              render = {() => {\n                // const token = decodeToken(this.props.storeToken);\n                // if(!token) {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <ClientNew />\n              }} />\n\n            <Route exact path = \"/clientList\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <ClientList />\n              }} />\n\n            <Route exact path = \"/punchInNew\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <PunchInNew />\n              }} />\n\n            <Route exact path = \"/punchInsList\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <PunchInsList />\n              }} />\n            \n            <Route exact path = \"/invoiceNew\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <InvoiceNew />\n              }} />\n            \n            <Route exact path = \"/pdfTemplate\" \n              render = {() => {\n                if (!this.props.storeEmail)\n                  return <Login />\n                else\n                  return <PdfTemplate />\n              }} />\n\n            <Route exact path = \"/about\" >\n              <About />\n            </Route>\n\n            <Route component = { NoPage } />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return({\n    storeEmail      : store.email\n  });\n}\n\n\nexport default connect(mapStateToProps, null)(App);\n","// this module allows persist the data in localStorage and keep the data among different browser tabs, and after the user rebooting the system, as well. That said, data is kept in the browser localstorage.\n\nexport const getUser = () => {\n  try {\n    const user = {\n      id          : localStorage.getItem('id'),\n      name        : localStorage.getItem('name'),\n      email       : localStorage.getItem('email'),\n      token       : localStorage.getItem(\"token\"),\n\n      address     : localStorage.getItem(\"address\"),\n      city        : localStorage.getItem(\"city\"),\n      postalCode  : localStorage.getItem(\"postalCode\"),\n      phone       : localStorage.getItem(\"phone\")\n    }\n    return(user ? user : undefined);\n\n  } catch (err) {\n    return undefined;\n  }\n}\n\nexport const saveState = user => {\n  try {\n    localStorage.setItem('id', user.id);\n    localStorage.setItem('email', user.email);\n    localStorage.setItem('name', user.name);\n    localStorage.setItem(\"token\", user.token);\n\n    localStorage.setItem(\"city\", user.city);\n    localStorage.setItem(\"address\", user.address);\n    localStorage.setItem(\"postalCode\", user.postalCode);\n    localStorage.setItem(\"phone\", user.phone);\n\n  } catch (err) {\n    return err.message;\n  }\n}\n\n\nexport const saveStateClient = client => {\n  try {\nconsole.log(\"error on saveStateClient at localStorage.js\");\n    // localStorage.setItem(\"client_id\", client.client_id);\n    // localStorage.setItem(\"client_nickname\", client.client_nickname);\n    // localStorage.setItem(\"client_dr\", client.client_dr);\n\n    // localStorage.setItem(\"client_birthday\", client.client_birthday);\n    // localStorage.setItem(\"client_name\", client.client_name);\n    // localStorage.setItem(\"client_mother\", client.client_mother);\n    // localStorage.setItem(\"client_mphone\", client.client_mphone);\n    // localStorage.setItem(\"client_memail\", client.client_memail);\n    // localStorage.setItem(\"client_father\", client.client_father);\n    // localStorage.setItem(\"client_fphone\", client.client_fphone);\n    // localStorage.setItem(\"client_femail\", client.client_femail);\n    // localStorage.setItem(\"client_consultant\", client.client_consultant);\n    // localStorage.setItem(\"client_cphone\", client.client_cphone);\n    // localStorage.setItem(\"client_cemail\", client.client_cemail)\n  } catch (err) {\n    return err.message;\n  }\n}\n\n\nexport const clearUserLS = () => {\n  localStorage.removeItem('id');\n  localStorage.removeItem('name');\n  localStorage.removeItem('email');\n  localStorage.removeItem(\"token\");\n\n  localStorage.removeItem(\"address\");\n  localStorage.removeItem(\"city\");\n  localStorage.removeItem(\"postalCode\");\n  localStorage.removeItem(\"phone\");\n  \n\n  // localStorage.removeItem(\"client_id\");\n  // localStorage.removeItem(\"client_nickname\");\n  // localStorage.removeItem(\"client_dr\");\n\n  // localStorage.removeItem(\"client_birthday\");\n  // localStorage.removeItem(\"client_name\");\n  // localStorage.removeItem(\"client_mother\");\n  // localStorage.removeItem(\"client_mphone\");  \n  // localStorage.removeItem(\"client_memail\");\n  // localStorage.removeItem(\"client_father\");\n  // localStorage.removeItem(\"client_fphone\");\n  // localStorage.removeItem(\"client_femail\");\n  // localStorage.removeItem(\"client_consultant\");\n  // localStorage.removeItem(\"client_cphone\");\n  // localStorage.removeItem(\"client_cemail\");\n}\n","import { saveState, clearUserLS } from './localStorage.js'\n\nconst initialState = {}\n\nconst reducer = (state = initialState, action) => {\n// console.log(\"***action\", action);\n  let newState = {...state};\n  if (action.type === \"LOGIN\") {\n    newState = {...state,\n      id          : action.data.user.id,\n      email       : action.data.user.email,\n      name        : action.data.user.name,\n      token       : action.data.user.token,\n\n      address     : action.data.user.address,\n      city        : action.data.user.city,\n      postalCode  : action.data.user.postalCode,\n      phone       : action.data.user.phone\n    };\n    saveState(newState);\n\n  } else if (action.type === \"LOGOUT\") {\n    newState = {\n      id              : undefined,\n      email           : undefined,\n      name            : undefined,\n      token           : undefined,\n\n      address         : undefined,\n      city            : undefined,\n      postalCode      : undefined,\n      phone           : undefined\n      // client_id       : undefined,\n      // client_nickname : undefined,\n      // client_dr       : undefined,\n\n      // client_name     : undefined,\n      // client_mother   : undefined,\n      // client_mphone   : undefined,\n      // client_memail   : undefined,\n      // client_father   : undefined,\n      // client_fphone   : undefined,\n      // client_femail   : undefined,\n      // consultant      : undefined,\n      // cphone          : undefined,\n      // cemail          : undefined \n    };\n    clearUserLS();\n\n  } else if (action.type === \"SETCLIENT\") {\nconsole.log(\"error on SETCLIENT in reducer.js\");\n    // newState = {...state,\n    //   client_id       : action.data.client._id,\n    //   client_nickname : action.data.client.nickname,\n    //   client_dr       : action.data.client.default_rate,\n\n    //   client_birthday   : action.data.client.birthday,\n    //   client_name       : action.data.client.name,\n    //   client_mother     : action.data.client.mother,\n    //   client_mphone     : action.data.client.cphone,\n    //   client_memail     : action.data.client.cemail,\n    //   client_father     : action.data.client.father,\n    //   client_fphone     : action.data.client.fphone,\n    //   client_femail     : action.data.client.femail,\n    //   client_consultant : action.data.client.consultant,\n    //   client_cphone     : action.data.client.cphone,\n    //   client_cemail     : action.data.client.cemail\n    // };\n    // saveStateClient(newState)\n  }\n  \n  return newState;\n}\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducer.js';\nimport { getUser } from './localStorage.js';\n// import { checkServerIdentity } from 'tls';\n\nconst persistedData = {\n  id          : getUser().id,\n  email       : getUser().email,\n  name        : getUser().name,\n  token       : getUser().token,\n\n  address     : getUser().address,\n  city        : getUser().city,\n  postalCode  : getUser().postalCode,\n  phone       : getUser().phone\n}\n\nconst store = createStore(\n  reducer,\n  persistedData );\n\nstore.subscribe(() => {\n  console.log(\"store.subscribe- \", store.getState());\n})\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./component/store/store.js\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store } >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}